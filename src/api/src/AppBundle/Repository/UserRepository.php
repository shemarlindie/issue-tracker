<?php

namespace AppBundle\Repository;

use AppBundle\Entity\User;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use Symfony\Bridge\Doctrine\Security\User\UserLoaderInterface;
use Symfony\Component\HttpFoundation\Request;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
  implements UserLoaderInterface {

  /**
   * @param string $username
   * @return mixed
   * @throws \Doctrine\ORM\NonUniqueResultException
   *
   * Allows user load by email or username.
   */
  public function loadUserByUsername($username) {
    return $this->createQueryBuilder('user')
      ->where('user.username = :username')
      ->orWhere('user.email = :email')
      ->setParameter('username', $username)
      ->setParameter('email', $username)
      ->getQuery()
      ->getOneOrNullResult();
  }

  public function search($text) {
    return $this->createQueryBuilder('user')
      ->where('user.firstName LIKE :text')
      ->orWhere('user.lastName LIKE :text')
      ->orWhere('user.email LIKE :text')
      ->setParameter('text', '%'.$text.'%');
  }

  public function findByConfirmationToken($token) {
    return $this->createQueryBuilder('user')
      ->where('user.confirmationToken = :token')
      ->setParameter('token', $token)
      ->getQuery()
      ->getOneOrNullResult();
  }

  public function checkUsername($username) {
    return $this->createQueryBuilder('user')
      ->select('count(user.id)')
      ->where('user.usernameCanonical = :username')
      ->setParameter('username', mb_strtolower($username))
      ->getQuery()
      ->getSingleScalarResult() == 0;
  }
}

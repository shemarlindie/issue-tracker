!function(e){"use strict";e.module("app.issue").factory("IssueService",["AppConfig","$http","$q",function(t,s,i){var r=t.API_URI,u={CACHE:{types:void 0,statuses:void 0,priorities:void 0},get:function(e){return s.get(r+"/issues/"+e+"/").then(function(e){return e.data=u.unserialize(e.data),e})},all:function(e,t){return e=e||{},s.get(r+"/issues/?"+$.param(e),{ignoreLoadingBar:t})},create:function(e){return s.post(r+"/issues/",u.serialize(e))},update:function(e){return s.patch(r+"/issues/"+e.id+"/",u.serialize(e))},"delete":function(e){return s["delete"](r+"/issues/"+e.id+"/")},types:function(){return u.CACHE.types?i.when({data:{results:u.CACHE.types}}):s.get(r+"/issue-types/?limit=100").then(function(e){return u.CACHE.types=e.data.results,e})},priorities:function(){return u.CACHE.priorities?i.when({data:{results:u.CACHE.priorities}}):s.get(r+"/issue-priorities/?limit=100").then(function(e){return u.CACHE.priorities=e.data.results,e})},statuses:function(){return u.CACHE.statuses?i.when({data:{results:u.CACHE.statuses}}):s.get(r+"/issue-statuses/?limit=100").then(function(e){return u.CACHE.statuses=e.data.results,e})},serialize:function(t){return t=e.copy(t),t.project_id=t.project.id,!t.date_due&&t.project.date_due&&(t.date_due=t.project.date_due),t.testers_ids=t.testers.map(function(e){return e.id}),delete t.testers,t.fixers_ids=t.fixers.map(function(e){return e.id}),delete t.fixers,t.tags_ids=t.tags.map(function(e){return e.id}),delete t.tags,t},unserialize:function(e){return e.date_due&&(e.date_due=new Date(e.date_due)),e}};return u}])}(angular);
//# sourceMappingURL=../sourcemaps/app.issue/issue.service.js.map

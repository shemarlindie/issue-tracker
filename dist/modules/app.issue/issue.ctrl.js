!function(t){"use strict";t.module("app.issue").controller("IssueCtrl",["$scope","$stateParams","$state","AppConfig","SecurityService","UserService","IssueService","TagService","ProjectService","CommentService","$mdDialog","$interval",function(e,n,s,o,a,i,r,u,c,d,m,l){var h=this;h.typeList=[],h.statusList=[],h.priorityList=[],h.editing=n.id,h.projectId=n.project,h.init=function(){r.types().then(function(t){h.typeList=t.data.results}),r.statuses().then(function(t){h.statusList=t.data.results}),r.priorities().then(function(t){h.priorityList=t.data.results}),h.comment={},h.statusChangeData={},h.query={limit:10,page:1},h.promise=void 0,h.editing?r.get(h.editing).then(function(t){h.issue=t.data,"app.issue-detail"==s.current.name&&h.loadComments(),console.log("issue details",h.issue)}):(h.issue={tags:[],testers:[],fixers:[],status_id:1,type_id:1,priority_id:1},h.projectId&&c.get(h.projectId).then(function(t){h.issue.project=t.data}),h.issue.testers.push(a.getUser())),h.projectSearch={search:function(t){return c.search(t).then(function(t){return t.data.results})}},h.testerSearch={search:function(t){return i.search(t).then(function(t){return t.data.results})}},h.fixerSearch={search:function(t){return i.search(t).then(function(t){return t.data.results})}},h.tagSearch={search:function(t){return u.search(t).then(function(t){return t.data.results})}}},h.create=function(){r.create(h.issue).then(function(t){h.projectId?s.go("app.project-detail",{id:h.projectId}):s.go("app.issue-detail",{id:t.data.id})})["catch"](function(t){console.log("creation error",t)})},h.update=function(){r.update(h.issue).then(function(t){s.go("app.issue-detail",{id:t.data.id})},function(t){console.log("update error",t)})},h.resetStatusForm=function(){h.statusChangeData={},h.statusForm.$setPristine(),h.statusForm.$setUntouched()},h.resetCommentForm=function(){h.comment={},h.commentForm.$setPristine(),h.commentForm.$setUntouched()},h.onPaginate=function(){h.loadComments()},h.loadComments=function(e,n){e=e||{},e=t.extend({},h.query,e),e.issue=h.issue.id,h.promise=d.all(e,n).then(function(t){return h.comments=t.data,t})["catch"](function(t){console.log("unable to load comments",t)})},h.addComment=function(){h.comment.issue=h.issue,d.create(h.comment).then(function(){h.resetCommentForm(),h.loadComments()})},h.removeComment=function(t){var e=m.confirm({textContent:"Are you sure you want to delete this comment?",ok:"Delete",cancel:"Cancel"});m.show(e).then(function(){d["delete"](t).then(function(){h.loadComments()})})},h.updateStatus=function(){if(h.statusChangeData.status.id!=h.issue.status.id){var e=t.extend({},h.issue,{status_id:h.statusChangeData.status.id});r.update(e).then(function(t){h.issue=t.data,h.statusChangeData.issue=h.issue,d.create(h.statusChangeData).then(function(t){h.resetStatusForm(),h.loadComments()})["catch"](function(t){console.log("error updating status comment",t)})})["catch"](function(t){console.error("error updating status",t)})}},h.deleteIssue=function(){var t=h.issue,e=m.confirm({htmlContent:"<p><b>"+t.name+"</b> will be deleted.</p>This cannot be undone.",ok:"Delete",cancel:"Cancel"});m.show(e).then(function(){r["delete"](t).then(function(e){s.go("app.project-detail",{id:t.project.id})})})},h.init();var f=l(function(){"app.issue-detail"==s.current.name&&h.loadComments(null,!0)},o.UPDATE_INTERVAL);e.$on("$destroy",function(){l.cancel(f)})}])}(angular);
//# sourceMappingURL=../sourcemaps/app.issue/issue.ctrl.js.map
